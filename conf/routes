# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)


# COMPANY
GET		/company/new/:email/:password				controllers.CompanyUserController.newCompanyUser(email : String, password : String)
GET		/company/findall							controllers.CompanyUserController.listCompanyUsers()
GET		/company/find/:email						controllers.CompanyUserController.findCompanyUser(email : String)
GET		/company/initfakedb							controllers.CompanyUserController.initializeCompanyUserDB()
GET		/company/verify/:email/:key					controllers.CompanyUserController.verifyCompanyUser(email : String, key : String)
GET		/company/sendvalidation/:email				controllers.Application.sendCompanyValidationEmail(email : String)

# PARTICULAR
GET		/particular/new/:name/:email/:password			controllers.ParticularUserController.newParticularUser(name : String, email : String, password : String)
GET		/particular/findall							controllers.ParticularUserController.listParticularUsers()
GET		/particular/find/:email						controllers.ParticularUserController.findParticularUser(email : String)
GET		/particular/initfakedb						controllers.ParticularUserController.initializeParticularUserDB()
GET		/particular/verify/:email/:key				controllers.ParticularUserController.verifyParticularUser(email : String, key : String)
GET		/particular/sendvalidation/:email			controllers.Application.sendParticularValidationEmail(email : String)

# JOBS
GET		/job/initfakedb								controllers.JobsController.initializeJobsDB()
GET		/job/find/:id								controllers.JobsController.findJob(id : Integer)
GET		/job/findall								controllers.JobsController.listJobs()

# COURSES
GET		/course/initfakedb							controllers.CoursesController.initializeCoursesDB()
GET		/course/find/:id							controllers.CoursesController.findCourse(id : Integer)
GET		/course/findall								controllers.CoursesController.listCourses()

# UTILS
GET 	/email/:toEmail								controllers.Application.sendEmail(toEmail : String)

#GET		/api/1/company/getAll
#/api/1/company/:id



# FINAL ROUTES
GET     /logout                                     controllers.Application.logout()

# PARTICULAR USER LOGIN
GET     /particular                                 controllers.LoginParticularUserController.blank()
POST    /particular/login                           controllers.LoginParticularUserController.submitLogin()
POST    /particular/signup                          controllers.LoginParticularUserController.signUpLogin()

GET     /particular/signup/step2                    controllers.LoginParticularUserController.step2()
GET     /particular/signup/step3                    controllers.LoginParticularUserController.step3()

# COMPANY USER LOGIN
GET     /company                                    controllers.LoginCompanyUserController.blank()
POST    /company/login                              controllers.LoginCompanyUserController.submitLogin()
POST    /company/signup                             controllers.LoginCompanyUserController.submitSignUp()

# COURSES
GET     /course                                     controllers.CoursesController.blank()
GET     /course/details/:id                         controllers.CoursesController.courseDetails(id : String)
POST    /course                                     controllers.CoursesController.blankFiltered()

# JOBS
GET     /job                                        controllers.JobsController.blank()
GET     /job/details/:id                            controllers.JobsController.jobDetails(id : String)
POST    /job                                        controllers.JobsController.blankFiltered()

# ORIENTATION
GET     /orientation                                controllers.OrientationController.blank()

#PUNTO PARTIDA
GET     /orientation/skills							controllers.OrientationController.skills()
GET     /orientation/currentsituation 				controllers.OrientationController.currentsituation()
GET     /orientation/interestidentification         controllers.OrientationController.interestidentification()

GET     /orientation/personal						controllers.OrientationController.personal()
GET     /orientation/professional					controllers.OrientationController.professional()

#PLANIFICATE

GET     /orientation/deadline                       controllers.OrientationController.deadline()
GET     /orientation/photo                          controllers.OrientationController.photo()

#PREPARATE
GET     /orientation/learntools                     controllers.OrientationController.learntools()
GET     /orientation/gettools                       controllers.OrientationController.gettools()
GET     /orientation/reputation                     controllers.OrientationController.reputation()
GET     /orientation/networking                     controllers.OrientationController.networking()

#PROCESO SELECCION

GET     /orientation/tinterview                     controllers.OrientationController.tinterview()
GET     /orientation/pinterview                     controllers.OrientationController.pinterview()
GET     /orientation/actinterview                   controllers.OrientationController.actinterview()
GET     /orientation/questionsinterview             controllers.OrientationController.questionsinterview()
GET     /orientation/level                          controllers.OrientationController.level()
GET     /orientation/specialization                 controllers.OrientationController.specialization()
GET     /orientation/bestdeals                      controllers.OrientationController.bestdeals()


# Use: /pdf/t1   or     /pdf/t2
GET     /pdf/:template                              controllers.PDFController.fakeCV(template : String)